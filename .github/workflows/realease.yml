name: Deploy production flow

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  lint:
    name: Lint ...
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node enviroment
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install packages
        run: npm install

      - name: Testing
        run: npm run lint

  testing:
    name: Testing ...
    runs-on: ubuntu-latest
    environment: production
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node enviroment
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install packages
        run: npm install

      - name: Testing
        run: |-
          echo "Testing"

  build:
    name: Publish container registry ...
    runs-on: ubuntu-latest
    environment: production
    needs: testing
    env:
      GS_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GS_PROJECT_REGION: ${{ secrets.GCP_PROJECT_REGION }}
      GS_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      GHCR_IMAGE_NAME: ghcr.io/${{ github.repository }}-${{ secrets.PREFIX }}
      GCR_IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-${{ secrets.PREFIX }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build . -t $GHCR_IMAGE_NAME:$GITHUB_SHA -t $GHCR_IMAGE_NAME:latest  -t $GCR_IMAGE_NAME:$GITHUB_SHA -t $GCR_IMAGE_NAME:latest  -f Dockerfile.prod

      - name: Docker inspect
        run: docker inspect $GHCR_IMAGE_NAME:latest

      - name: Log in to ghcr.io registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish ghcr.io registry
        run: docker push $GHCR_IMAGE_NAME --all-tags

      - name: Set up Cloud auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ env.GS_CREDENTIALS }}'

      - name: Log in to gcr.io registry
        run: gcloud auth configure-docker --quiet

      - name: Publish gcr.io registry
        run: docker push $GCR_IMAGE_NAME --all-tags

  deploy:
    name: Deploy production environment
    runs-on: ubuntu-latest
    environment: production
    needs: build
    env:
      PREFIX: ${{ secrets.PREFIX }}
      GS_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GS_PROJECT_REGION: ${{ secrets.GCP_PROJECT_REGION }}
      GS_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      GCR_IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-${{ secrets.PREFIX }}

    steps:
      - name: Set up Cloud auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ env.GS_CREDENTIALS }}'

      - name: Deploy cloud run
        run: |-
          gcloud run deploy ${{ env.GS_PROJECT_ID }}-api-${{ env.PREFIX }} \
            --platform=managed \
            --binary-authorization=default \
            --allow-unauthenticated \
            --image $GCR_IMAGE_NAME:latest \
            --region $GS_PROJECT_REGION \
            --command node \
            --args index.js
